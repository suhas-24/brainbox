# =================================================================
# AI FORGE ADVANCED LLM TEMPLATE - LOGGING CONFIGURATION
# =================================================================

version: 1
disable_existing_loggers: false

formatters:
  standard:
    format: "[%(asctime)s] %(levelname)s in %(name)s: %(message)s"
    datefmt: "%Y-%m-%d %H:%M:%S"
  
  detailed:
    format: "[%(asctime)s] %(levelname)s in %(name)s [%(filename)s:%(lineno)d]: %(message)s"
    datefmt: "%Y-%m-%d %H:%M:%S"
  
  json:
    format: '{"timestamp": "%(asctime)s", "level": "%(levelname)s", "logger": "%(name)s", "file": "%(filename)s", "line": %(lineno)d, "message": "%(message)s"}'
    datefmt: "%Y-%m-%dT%H:%M:%S"
  
  performance:
    format: "[%(asctime)s] PERF %(name)s: %(message)s"
    datefmt: "%Y-%m-%d %H:%M:%S"

handlers:
  console:
    class: logging.StreamHandler
    level: INFO
    formatter: standard
    stream: ext://sys.stdout
  
  file:
    class: logging.handlers.RotatingFileHandler
    level: INFO
    formatter: detailed
    filename: logs/app.log
    maxBytes: 104857600  # 100MB
    backupCount: 5
    encoding: utf8
  
  error_file:
    class: logging.handlers.RotatingFileHandler
    level: ERROR
    formatter: detailed
    filename: logs/error.log
    maxBytes: 104857600  # 100MB
    backupCount: 5
    encoding: utf8
  
  json_file:
    class: logging.handlers.TimedRotatingFileHandler
    level: INFO
    formatter: json
    filename: logs/app.json
    when: midnight
    interval: 1
    backupCount: 30
    encoding: utf8
  
  performance_file:
    class: logging.handlers.RotatingFileHandler
    level: INFO
    formatter: performance
    filename: logs/performance.log
    maxBytes: 52428800  # 50MB
    backupCount: 3
    encoding: utf8
  
  security_file:
    class: logging.handlers.RotatingFileHandler
    level: WARNING
    formatter: detailed
    filename: logs/security.log
    maxBytes: 52428800  # 50MB
    backupCount: 10
    encoding: utf8

loggers:
  # Application loggers
  src:
    level: INFO
    handlers: [console, file, json_file]
    propagate: false
  
  src.agents:
    level: INFO
    handlers: [console, file]
    propagate: false
  
  src.llm:
    level: INFO
    handlers: [console, file]
    propagate: false
  
  src.memory:
    level: INFO
    handlers: [console, file]
    propagate: false
  
  src.retrieval:
    level: INFO
    handlers: [console, file]
    propagate: false
  
  src.pipelines:
    level: INFO
    handlers: [console, file]
    propagate: false
  
  src.guardrails:
    level: WARNING
    handlers: [console, file, security_file]
    propagate: false
  
  src.handlers.error_handler:
    level: ERROR
    handlers: [console, error_file]
    propagate: false
  
  # Performance monitoring
  performance:
    level: INFO
    handlers: [performance_file]
    propagate: false
  
  # Security monitoring
  security:
    level: WARNING
    handlers: [console, security_file]
    propagate: false
  
  # External library loggers
  openai:
    level: WARNING
    handlers: [console, file]
    propagate: false
  
  anthropic:
    level: WARNING
    handlers: [console, file]
    propagate: false
  
  httpx:
    level: WARNING
    handlers: [file]
    propagate: false
  
  uvicorn:
    level: INFO
    handlers: [console, file]
    propagate: false
  
  uvicorn.access:
    level: INFO
    handlers: [file]
    propagate: false
  
  fastapi:
    level: INFO
    handlers: [console, file]
    propagate: false
  
  sqlalchemy.engine:
    level: WARNING
    handlers: [file]
    propagate: false
  
  alembic:
    level: INFO
    handlers: [console, file]
    propagate: false

root:
  level: INFO
  handlers: [console, file]

# Environment-specific overrides
environments:
  development:
    loggers:
      src:
        level: DEBUG
        handlers: [console, file]
      uvicorn:
        level: DEBUG
        handlers: [console]
  
  production:
    loggers:
      src:
        level: INFO
        handlers: [file, json_file]
      root:
        level: WARNING
        handlers: [file, error_file]
    handlers:
      console:
        level: ERROR
  
  testing:
    loggers:
      src:
        level: DEBUG
        handlers: [console]
      root:
        level: WARNING
        handlers: [console]
